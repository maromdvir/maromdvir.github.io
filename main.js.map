{"version":3,"sources":["./src/app/components/table/table.component.ts","./src/app/components/table/table.component.html","./src/environments/environment.ts","./src/app/views/main/main.component.ts","./src/app/views/main/main.component.html","./src/app/shared/services/flights/flights.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/services/net/net.service.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Flight } from 'src/app/shared/models/flight.model';\n\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\nexport class TableComponent implements OnInit {\n  \n  @Input() colData: { field: string, header: string }[];\n  @Input() gridData: any[];\n  @Output() onRowClick: EventEmitter<any> = new EventEmitter();\n\n  selectedRow: any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.selectedRow = this.gridData[0];\n  }\n\n  onRowClicked($event: Flight): void{\n    this.selectedRow = $event;\n    this.onRowClick.emit($event);\n  }\n\n}\n\n\n","<div *ngIf=\"colData && gridData && selectedRow\" class=\"table-responsive\">\n    <table class=\"table table-hover\">\n        <thead>\n            <tr>           \n                <th *ngFor=\"let key of colData\">\n                    {{key.header}}\n                </th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let item of gridData; index as i; first as isFirst\"\n                (click)=\"onRowClicked(item)\"\n                [class.table-active]=\"item === selectedRow\">          \n                <td *ngFor=\"let key of colData\">\n                    <span>{{item[key.field]}}</span>\n                </td>\n              </tr>\n        </tbody>\n    </table>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FlightsService } from '../../shared/services/flights/flights.service'\nimport { Worker } from '../../shared/models/worker.model';\nimport { Flight } from '../../shared/models/flight.model';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { timer } from 'rxjs';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit, OnDestroy {\n\n  selectedWorker: Worker;\n  workers: Worker[];\n  selectedWorkerFlights: Flight[];\n  selectedWorkerFlight: {[key: string]: any };\n  isLoadingFlights: boolean;\n  subscriptions: Subscription[] = [];\n\n\n\n  flightsTableColData:{ field: string, header: string }[] = [\n    { field: 'num', header: 'Flight Number' },\n    { field: 'from', header: 'Origin' },\n    { field: 'from_date', header: 'Origin Date' },\n    { field: 'to', header: 'Destination' },\n    { field: 'to_date', header: 'Destination Date' }\n  ];\n\n  flightMoreInfoColData: { field: string, header: string }[] = [\n    { field: 'plane', header: 'Plane Number' },\n    { field: 'stringDuration', header: 'Duration' },\n    { field: 'from_gate', header: 'Origin Gate' },\n    { field: 'to_gate', header: 'Destination gate' }\n  ];\n\n   \n  constructor(private flights: FlightsService) { }\n\n\n  ngOnInit(): void {\n    this.subscriptions.push(this.flights.getWorkers()\n      .subscribe((workers: Worker[]) => {\n        ;this.workers = workers\n        if(this.workers[0]){\n          this.selectedWorker = this.workers[0];\n          this.runGetFlightsInterval();\n        }\n      }, err => alert('workers error')\n      ));\n  }\n\n\n  runGetFlightsInterval(): void {\n    this.subscriptions.push(timer(0, 60000)   // start now and every 1 min\n      .subscribe(() => {\n        this.isLoadingFlights = true;\n        this.subscriptions.push(\n          this.flights.getFlights(this.selectedWorker.id)\n            .subscribe((flights: Flight[]) => {\n              this.selectedWorkerFlights = flights;\n              if (this.selectedWorkerFlights[0]) {\n                this.selectedWorkerFlight = this.selectedWorkerFlights[0];\n                this.selectedWorkerFlight.stringDuration = this.flights.convertMinuts(this.selectedWorkerFlight.duration);\n              }\n              this.isLoadingFlights = false;\n            }\n              , err => alert('flights error')))\n      })\n    );\n  }\n\n  onWorkerSelected($event: Worker): void {\n    this.selectedWorker = $event;\n    this.isLoadingFlights = true;\n\n    this.subscriptions.push(this.flights.getFlights(this.selectedWorker.id)\n      .subscribe((flights: Flight[]) => {\n        this.selectedWorkerFlights = flights;\n        this.selectedWorkerFlight = this.selectedWorkerFlights[0];\n        this.selectedWorkerFlight.stringDuration = this.flights.convertMinuts(this.selectedWorkerFlight.duration);\n        this.isLoadingFlights = false;\n      }\n        , err => alert('flights error')\n      )\n    );\n  }\n\n  onFlightSelected($event: Flight): void {\n    this.selectedWorkerFlight = $event;\n    this.selectedWorkerFlight.stringDuration = this.flights.convertMinuts($event.duration);\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscriptions.length > 0) {\n      this.subscriptions.forEach(((sub: Subscription) => sub.unsubscribe()));\n    }\n  }\n\n}\n\n","<div class=\"container-fluid mt-5\" *ngIf = \"workers && selectedWorkerFlights; else loadingBlock\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-sm-2 border border-dark p-0\">\n            <div class=\"h-200px bg-cyan border-bottom border-dark \">\n                <div class=\"row h-100 justify-content-center align-items-center font-weight-bold\">\n                    workers!\n                </div>\n                \n            </div>\n            <div>\n                <ul class=\"list-group list-group-flush\">\n                    <li *ngFor=\"let worker of workers\"\n                        (click)=\"onWorkerSelected(worker)\" \n                        class=\"list-group-item list-group-item-action\"\n                        [class.active]=\"worker === selectedWorker\"\n                        [class.border]=\"worker === selectedWorker\"\n                        [class.border-dark]=\"worker === selectedWorker\"\n                        >{{worker.name}}\n                    </li>\n                </ul>\n            </div>\n        </div>\n        <div class=\"col-sm-6 border-top border-bottom border-dark pt-4\">\n            <app-table\n                *ngIf=\"!isLoadingFlights; else loadingBlock\"\n                [colData] = \"flightsTableColData\"\n                [gridData] = \"selectedWorkerFlights\"\n                (onRowClick) = \"onFlightSelected($event)\"\n            ></app-table>\n        </div>\n        \n        <div *ngIf=\"selectedWorkerFlight\" class=\"col-sm-2 border border-dark\">\n                <ul class=\"list-group list-group-flush mt-5\">\n                    <li *ngFor=\"let item of flightMoreInfoColData\"\n                        class=\"list-group-item list-group-item-action\">\n                    <div class=\"row\">\n                        <div class=\"col-7\">\n                            {{item.header}}\n                        </div>\n                        <div class=\"col-5\">\n                            {{selectedWorkerFlight[item.field]}}\n                        </div>\n                    </div>\n                    </li>\n                </ul>\n        </div>\n    </div>\n</div>\n<ng-template #loadingBlock>\n    <div class=\"row justify-content-center align-items-center mt-5\">Loading...</div>\n</ng-template>\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Worker     } from '../../models/worker.model';\nimport { Flight     } from '../../models/flight.model';\nimport { NetService } from '../net/net.service'\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlightsService {\n\n  private api: string = 'https://interview-mock.herokuapp.com/api/';\n\n  constructor(private net: NetService) { }\n\n\n  getWorkers(): Observable<Worker[]> {\n    return this.net.getWorkers(`${this.api}workers`);\n  }\n\n  getFlights(workerId: number): Observable<Flight[]> {\n    return this.net.getFlights(`${this.api}workers/${workerId}`);\n  }\n\n  convertMinuts(n: number): string {\n    let num = n;\n    let hours = (num / 60);\n    let rhours = Math.floor(hours);\n    let minutes = (hours - rhours) * 60;\n    let rminutes = Math.round(minutes);\n    return `${rhours}h ${num}m`;\n    }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Flights';\n}\n","<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Worker } from '../../models/worker.model';\nimport { Flight } from '../../models/flight.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NetService {\n\n  constructor(private http: HttpClient) { }\n\n  getWorkers(query: string): Observable<Worker[]>{\n    return this.http.get<Worker[]>(query);\n  }\n\n  getFlights(query: string): Observable<Flight[]>{\n    return this.http.get<Flight[]>(query);\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './views/main/main.component';\nimport { TableComponent } from './components/table/table.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent,\n    TableComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MainComponent } from '../app/views/main/main.component';\n\nconst routes: Routes = [ \n  {\n    path: '',\n    component: MainComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}